<!--Author: Bryce, Ella, Alaina, Rex-->
<!--Description: Admin add Events page-->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Event Request Form - Turtle Shelter Project</title>
    <link rel="stylesheet" href="/styles.css">
    <style>
        /*Specific styling for table */
        body {
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            position: relative; /* Add this line */
        }

        .form-container {
            width: 100%;
            max-width: 600px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            margin-top: 60px;
        }

        .form-title {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        .step-container {
            position: relative;
            overflow: hidden;
            transition: height 0.3s ease-in-out;
        }

        .step {
            position: absolute;
            width: 100%;
            transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
            transform: translateX(100%);
            opacity: 0;
            visibility: hidden;
            padding: 10px;
            box-sizing: border-box;
        }

        .step.active {
            transform: translateX(0);
            opacity: 1;
            visibility: visible;
        }

        .step.left {
            transform: translateX(-100%);
        }

        .step.active {
            transform: translateX(0);
            opacity: 1;
            visibility: visible;
        }

        .step.left {
            transform: translateX(-100%);
        }

        .form-section {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
        }

        input, select, textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 16px;
            display: block;
        }

        input[type="number"] {
            -moz-appearance: textfield;
            appearance: textfield;
            min-width: 50px;
        }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        textarea {
            min-height: 100px;
            resize: vertical;
        }

        .progress-container {
            margin: 20px 0;
        }

        .progress-bar {
            background: #eee;
            height: 10px;
            border-radius: 5px;
            overflow: hidden;
        }

        .progress {
            height: 100%;
            background: #21A2DB;
            width: 0%;
            transition: width 0.3s ease;
        }

        .step-indicator {
            text-align: center;
            color: #666;
            margin-top: 5px;
            font-size: 14px;
        }

        .button-group {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }

        button {
            padding: 12px 24px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .next-btn {
            background: #21A2DB;
            color: white;
        }

        .next-btn:hover {
            background: #1B8ABF;
        }

        .prev-btn {
            background: #666;
            color: white;
        }

        .prev-btn:hover {
            background: #555;
        }

        .submit-btn {
            background: #2196F3;
            color: white;
        }

        .submit-btn:hover {
            background: #1976D2;
        }

        button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        input:invalid, select:invalid, textarea:invalid {
            border-color: #ff6b6b;
        }

        .back-button {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            background-color: #2196F3;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        .back-button:hover {
            background-color: #1976D2;
        }
    </style>
</head>
<body>
    <!--Back navigation to go to previous page-->
    <form action="/eventRequests">
        <a href="/eventRequests" class="back-button">Back to Events</a>
    </form>
    <!--Main form container-->
    <div class="form-container">
        <h2 class="form-title">Turtle Shelter Event Request</h2>
        <form id="eventForm" action="/adminSubmitEvent" method="POST">
            <div class="step-container">
                <!-- Step 1: Basic Event Info -->
                <div class="step active" data-step="1">
                    <h3>Event Information</h3>
                    <div class="form-section">
                        <label for="event_name">Event Name*</label>
                        <input type="text" id="event_name" name="event_name" required>

                        <label for="comments">Event Description*</label>
                        <textarea id="comments" name="comments" required></textarea>
                    </div>
                </div>

                <!-- Step 2: Contact Info -->
                <div class="step active" data-step="1">
                    <h3>We'd love to connect with you about your eventâ€”please share your contact information!</h3>
                    <div class="form-section">
                        <label for="event_contact_first_name">Contact First Name</label>
                        <input type="text" id="event_contact_first_name" name="event_contact_first_name" required>

                        <label for="event_contact_last_name">Contact Last Name</label>
                        <input type="text" id="event_contact_last_name" name="event_contact_last_name" required>

                        <label for="event_contact_phone">Contact Phone</label>
                        <input type="tel" id="event_contact_phone" name="event_contact_phone" required>

                        <label for="event_contact_email">Contact Email</label>
                        <input type="tel" id="event_contact_email" name="event_contact_email" required>

                        <label for="event_contact_organization">Contact Organization (If you don't belong to an organization, put N/A)</label>
                        <input type="tel" id="event_contact_organization" name="event_contact_organization" required>

                    </div>
                </div>
                 
                <!-- Step 3: Date & Time -->
                <div class="step" data-step="2">
                    <h3>Event Schedule</h3>
                    <div class="form-section">
                        <label for="event_date">Event Date*</label>
                        <input type="date" id="event_date" name="event_date" required>

                        <label for="event_start_time">Start Time*</label>
                        <input type="time" id="event_start_time" name="event_start_time" required>

                        <label for="event_end_time">End Time*</label>
                        <input type="time" id="event_end_time" name="event_end_time" required>
                    </div>
                </div>

                <!-- Step 4: Event Details -->
                <div class="step" data-step="3">
                    <h3>Event Details</h3>
                    <div class="form-section">
                        <label for="type_of_event">Type of Event*</label>
                        <select id="type_of_event" name="type_of_event" required>
                            <option value="">Select Event Type</option>
                            <option value="sewing">Sewing</option>
                            <option value="non-sewing">Non-Sewing</option>
                            <option value="both">Both</option>
                        </select>

                        <div id="sewing_fields" style="display: none;">
                            <label for="num_sewers">Number of Sewers*</label>
                            <input type="number" id="num_sewers" name="num_sewers" min="0" required>

                            <label for="num_machines">Number of Sewing Machines Needed*</label>
                            <input type="number" id="num_machines" name="num_machines" min="0" required>

                            <label for="num_sergers">Number of Sergers Needed*</label>
                            <input type="number" id="num_sergers" name="num_sergers" min="0" required>
                        </div>

                        <label for="children_participating">Will there be children under 12 that will participate?*</label>
                        <select id="children_participating" name="children_participating" required>
                            <option value="">Select Answer</option>
                            <option value="yes">Yes</option>
                            <option value="no">No</option>
                        </select>

                        <div id="children_count_field" style="display: none;">
                            <label for="num_children">How many children under the age of 12 will be participating?*</label>
                            <input type="number" id="num_children" name="num_children" min="1">
                        </div>

                        <label for="num_volunteers">In order to keep our events well-organized, it is recommended that there is 1 trained volunteer for every 15 participants. <b>How many volunteers would be able to arrive an hour before your event to be trained and help at the event?</b></label>
                        <input type="number" id="num_volunteers" name="num_volunteers" min="0" required>

                    </div>
                </div>
                <!-- Step 5: Location -->
                <div class="step" data-step="4">
                    <h3>Event Location</h3>
                    <div class="form-section">
                        <label for="event_address">Event Address*</label>
                        <input type="text" id="event_address" name="event_address" required>

                        <label for="event_zip_code">ZIP Code*</label>
                        <input type="text" id="event_zip_code" name="event_zip_code" required>

                        <label for="event_city">City*</label>
                        <input type="text" id="event_city" name="event_city" required>

                        <!-- CODE CHANGE I MADE SEND tO BRYCE -->
                        <label for="vol_state">State*</label>
                        <select id="vol_state" name="vol_state" required>
                            <option value="">Select State/Territory</option>
                            <% 
                            const states = ["AL", "AK", "AS", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "GU", 
                                        "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", 
                                        "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "MP", "OH", 
                                        "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VI", "VA", 
                                        "WA", "WV", "WI", "WY"];
                            states.forEach(state => { %>
                                <option value="<%= state %>"><%= state %></option>
                            <% }); %>
                        </select>

                        <label for="venue_capacity">Venue Capacity*</label>
                        <input type="number" id="venue_capacity" name="venue_capacity" required min="1">
                    </div>
                </div>

             <!-- Step 6: Location Details -->
                <div class="step" data-step="5">
                    <h3>Event Details</h3>
                    <div class="form-section">
                        <label>Which types of tables will you be using?* (Select at least one)</label>
                        <div style="margin-bottom: 15px;">
                            <input type="checkbox" id="rectangular_tables" name="table_types" value="rectangular" style="width: auto; display: inline-block; margin-right: 10px;">
                            <label for="rectangular_tables" style="display: inline-block; margin-bottom: 0;">Rectangular Tables</label>
                        </div>
                        
                        <div style="margin-bottom: 15px;">
                            <input type="checkbox" id="round_tables" name="table_types" value="round" style="width: auto; display: inline-block; margin-right: 10px;">
                            <label for="round_tables" style="display: inline-block; margin-bottom: 0;">Round Tables</label>
                        </div>


                        <div id="rectangular_capacity" style="display: none;">
                            <label for="rectangular_seating">How many people can be seated at the rectangular tables?*</label>
                            <input type="number" id="rectangular_seating" name="rectangular_seating" min="1" required>
                        </div>

                        <div id="div_num_tables_rectangular" style="display: none;">
                            <label for="num_tables_rectangular">How many rectangular tables will be used at this event?</label>
                            <input type="number" id="num_tables_rectangular" name="num_tables_rectangular" min="1" required>
                        </div>

                        <div id="round_capacity" style="display: none;">
                            <label for="round_seating">How many people can be seated at the round tables?*</label>
                            <input type="number" id="round_seating" name="round_seating" min="1" required>
                        </div>

                        <div id="div_num_tables_round" style="display: none;">
                            <label for="num_tables_round">How many round tables will be used at this event?</label>
                            <input type="number" id="num_tables_round" name="num_tables_round" min="1" required>
                        </div>

                    </div>
                </div>

                   <!-- Step 7: Jen's Story -->
                <div class="step" data-step="5">
                    <h3>Miscellaneous Details</h3>
                    <div class="form-section">
                        <label for="wants_jen_story">Would you like Jen to tell her story?*</label>
                        <select id="wants_jen_story" name="wants_jen_story" required>
                            <option value="">Select Answer</option>
                            <option value="yes">Yes</option>
                            <option value="no">No</option>
                        </select>

                        <div id="jen_story_duration" style="display: none;">
                            <label for="jen_story_length">How long would you like Jen to present?*</label>
                            <select id="jen_story_length" name="jen_story_length">
                                <option value="">Select Duration</option>
                                <option value="5">5 minutes</option>
                                <option value="10">10 minutes</option>
                                <option value="15">15 minutes</option>
                                <option value="30">30 minutes</option>
                            </select>
                        </div>
                    </div>
                </div>
                

            </div>

            <div class="progress-container">
                <div class="progress-bar">
                    <div class="progress"></div>
                </div>
                <div class="step-indicator">Step <span id="currentStepNumber">1</span> of 7</div>
            </div>

            <div class="button-group">
                <button type="button" class="prev-btn" disabled>Previous</button>
                <button type="button" class="next-btn">Next</button>
                <button type="submit" class="submit-btn" style="display: none;">Submit Request</button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('eventForm');
            const steps = Array.from(document.querySelectorAll('.step'));
            const progress = document.querySelector('.progress');
            const stepNumber = document.getElementById('currentStepNumber');
            const prevBtn = document.querySelector('.prev-btn');
            const nextBtn = document.querySelector('.next-btn');
            const submitBtn = document.querySelector('.submit-btn');
            let currentStep = 0;

            // Table selection related elements
            const rectangularCheckbox = document.getElementById('rectangular_tables');
            const roundCheckbox = document.getElementById('round_tables');
            const rectangularCapacity = document.getElementById('rectangular_capacity');
            const roundCapacity = document.getElementById('round_capacity');
            const rectangularSeating = document.getElementById('rectangular_seating');
            const roundSeating = document.getElementById('round_seating');
            const divnumTablesRectangular = document.getElementById('div_num_tables_rectangular');
            const divnumTablesRound = document.getElementById('div_num_tables_round');
            const inputnumTablesRectangular = document.getElementById('num_tables_rectangular');
            const inputnumTablesRound = document.getElementById('num_tables_round');

            function updateProgress() {
                const progressPercentage = (currentStep / (steps.length - 1)) * 100;
                progress.style.width = progressPercentage + '%';
                stepNumber.textContent = currentStep + 1;
            }

            function showStep(stepIndex) {
                steps.forEach((step, index) => {
                    if (index < stepIndex) {
                        step.classList.remove('active');
                        step.classList.add('left');
                    } else if (index === stepIndex) {
                        step.classList.remove('left');
                        step.classList.add('active');
                        // Set container height to match active step
                        const stepContainer = document.querySelector('.step-container');
                        stepContainer.style.height = `${step.offsetHeight}px`;
                    } else {
                        step.classList.remove('active', 'left');
                    }
                });

                prevBtn.disabled = stepIndex === 0;
                if (stepIndex === steps.length - 1) {
                    nextBtn.style.display = 'none';
                    submitBtn.style.display = 'block';
                } else {
                    nextBtn.style.display = 'block';
                    submitBtn.style.display = 'none';
                }

                updateProgress();
            }

            function validateCurrentStep() {
                const currentStepElement = steps[currentStep];
                const requiredInputs = currentStepElement.querySelectorAll('input[required], select[required], textarea[required]');
                let isValid = true;

                // Special validation for table selection in step 5
                if (currentStepElement.dataset.step === '5') {
                    if (!validateTableSelection()) {
                        return false;
                    }
                }

                requiredInputs.forEach(input => {
                    if (!input.value.trim()) {
                        input.classList.add('invalid');
                        isValid = false;
                    } else {
                        input.classList.remove('invalid');
                    }
                });

                if (!isValid) {
                    alert('Please fill in all required fields before proceeding.');
                }
                
                return isValid;
            }

            // Table selection related functions
            function updateTableFields() {
                if (rectangularCheckbox.checked) {
                    rectangularCapacity.style.display = 'block';
                    rectangularSeating.required = true;
                    divnumTablesRectangular.style.display = 'block'
                    inputnumTablesRectangular.required = true;
                } else {
                    rectangularCapacity.style.display = 'none';
                    rectangularSeating.required = false;
                    rectangularSeating.value = '';
                    divnumTablesRectangular.style.display = 'none'
                    inputnumTablesRectangular.required = false;
                    inputnumTablesRectangular.value = '';
                }

                if (roundCheckbox.checked) {
                    roundCapacity.style.display = 'block';
                    roundSeating.required = true;
                    divnumTablesRound.style.display = 'block'
                    inputnumTablesRound.required = true;
                } else {
                    roundCapacity.style.display = 'none';
                    roundSeating.required = false;
                    roundSeating.value = '';
                    divnumTablesRound.style.display = 'none'
                    inputnumTablesRound.required = false;
                    inputnumTablesRound.value = ''; 
                }

                // Update container height after showing/hiding fields
                const activeStep = document.querySelector('.step.active');
                const stepContainer = document.querySelector('.step-container');
                if (stepContainer && activeStep) {
                    stepContainer.style.height = `${activeStep.offsetHeight}px`;
                }
            }

            function validateTableSelection() {
                if (!rectangularCheckbox.checked && !roundCheckbox.checked) {
                    alert('Please select at least one type of table');
                    return false;
                }
                return true;
            }

            // Event Listeners
            nextBtn.addEventListener('click', () => {
                if (validateCurrentStep() && currentStep < steps.length - 1) {
                    currentStep++;
                    showStep(currentStep);
                }
            });

            prevBtn.addEventListener('click', () => {
                if (currentStep > 0) {
                    currentStep--;
                    showStep(currentStep);
                }
            });

            form.addEventListener('submit', (e) => {
                console.log('Submission attempted')
                if (validateCurrentStep()) {
                    console.log('Form submitted!');
                    const formData = new FormData(form);
                    const formObject = Object.fromEntries(formData.entries());
                    console.log(formObject);
                    alert('Form submitted successfully!');
                }
            });

            // Event type selection handlers
            const eventTypeSelect = document.getElementById('type_of_event');
            const sewingFields = document.getElementById('sewing_fields');
            const numSewersInput = document.getElementById('num_sewers');
            const numMachinesInput = document.getElementById('num_machines');
            const numSergersInput = document.getElementById('num_sergers');

            if (eventTypeSelect) {
                eventTypeSelect.addEventListener('change', function() {
                    const selectedType = this.value;
                    if (selectedType === 'sewing' || selectedType === 'both') {
                        sewingFields.style.display = 'block';
                        numSewersInput.required = true;
                        numMachinesInput.required = true;
                        numSergersInput.required = true;
                    } else {
                        sewingFields.style.display = 'none';
                        numSewersInput.required = false;
                        numMachinesInput.required = false;
                        numSergersInput.required = false;
                        // Clear the values when hidden
                        numSewersInput.value = '';
                        numMachinesInput.value = '';
                        numSergersInput.value = '';
                    }
                    
                    // Update container height after showing/hiding fields
                    const activeStep = document.querySelector('.step.active');
                    const stepContainer = document.querySelector('.step-container');
                    stepContainer.style.height = `${activeStep.offsetHeight}px`;
                });
            }

            // Jen's story selection handlers
            const jenStorySelect = document.getElementById('wants_jen_story');
            const jenStoryDuration = document.getElementById('jen_story_duration');
            const jenStoryLength = document.getElementById('jen_story_length');

            if (jenStorySelect) {
                jenStorySelect.addEventListener('change', function() {
                    if (this.value === 'yes') {
                        jenStoryDuration.style.display = 'block';
                        jenStoryLength.required = true;
                    } else {
                        jenStoryDuration.style.display = 'none';
                        jenStoryLength.required = false;
                        jenStoryLength.value = ''; // Clear the selection
                    }
                    
                    // Update container height after showing/hiding fields
                    const activeStep = document.querySelector('.step.active');
                    const stepContainer = document.querySelector('.step-container');
                    stepContainer.style.height = `${activeStep.offsetHeight}px`;
                });
            }

                        // Children participation handlers
            const childrenSelect = document.getElementById('children_participating');
            const childrenCountField = document.getElementById('children_count_field');
            const numChildrenInput = document.getElementById('num_children');

            if (childrenSelect) {
                childrenSelect.addEventListener('change', function() {
                    if (this.value === 'yes') {
                        childrenCountField.style.display = 'block';
                        numChildrenInput.required = true;
                    } else {
                        childrenCountField.style.display = 'none';
                        numChildrenInput.required = false;
                        numChildrenInput.value = ''; // Clear the value when hidden
                    }
                    
                    // Update container height after showing/hiding fields
                    const activeStep = document.querySelector('.step.active');
                    const stepContainer = document.querySelector('.step-container');
                    if (stepContainer && activeStep) {
                        stepContainer.style.height = `${activeStep.offsetHeight}px`;
                    }
                });
            }
            // Add event listeners for table selection checkboxes
            if (rectangularCheckbox && roundCheckbox) {
                rectangularCheckbox.addEventListener('change', updateTableFields);
                roundCheckbox.addEventListener('change', updateTableFields);
            }

            // Initialize form
            showStep(currentStep);
        });
    </script>
</body>
</html>